include:
  - local: '/.gitlab/docker-vars.yml'
  - local: '/.gitlab/build-main.yml'
  - local: '/.gitlab/build-release-from-main.yml'
  - local: '/.gitlab/test-main.yml'
  - local: '/.gitlab/test-release.yml'
  - local: '/.gitlab/deploy-main.yml'
  - local: '/.gitlab/deploy-release.yml'
  - local: '/.gitlab/backup.yml'

variables:
  VERSION: "0.$CI_PIPELINE_IID"
  NAMESPACE: "rtm"
  DOCKERFILE: "Dockerfile"
  ## FOR RELEASE VERSION
  NAMESPACE_RELEASE: "rtm-stable"
  VERSION_RELEASE: "release"
  # BACKUP
  BACKUP_SERVER: "gitlab.inno.tech"
  BACKUP_PATH: "colibri"
  BACKUP_BRANCH_NAME: "backup_branch"

.default_rules:
  rules:
    - if: $CI_PROJECT_URL =~ /https:\/\/gitlab.colibriproject.ru\/.*/
 
commit-job:
  stage: build
  image: docker:24.0.4
  services:
    - name: docker:24.0.4-dind
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk update && apk add openssh-client )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo $HOST_K >> ~/.ssh/known_hosts
    - '[[ -f /.dockerinit ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    #- echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - apk update
    - apk add git
    - git fetch origin
    - git reset --hard origin/mainline
    - git remote -v
    - git branch
    - git branch | grep -v "*" | xargs git branch -D || true
    - git remote add commitN [git@10.4.87.16:9418]:colibri-develop/dummy-ext.git || git remote set-url commitN [git@10.4.87.16:9418]:colibri-develop/dummy-ext.git
    - git checkout -b main
    - git push -f commitN main
  rules:
    - if: $CI_PROJECT_URL =~ /https:\/\/gitlab.inno.tech\/.*/
  tags:
    - dind
  only:
    - master

